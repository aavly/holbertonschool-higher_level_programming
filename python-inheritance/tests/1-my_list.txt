========================
The ``my_list`` module
========================

Using ``MyList class``
.....................


First import ``print_sorted`` from the ``1-my_list.py`` file:
==============================================================
    >>> add = __import__('1-my_list').print_sorted


Tests:
======

Regular tests
==============

Test case #1: Check instantiation

    >>> my_list = MyList()
	>>> my_list.append(3)
	>>> my_list.append(1)
	>>> my_list.print_sorted()
	[1, 2, 3]

Test case #2: Check inherits from list

	>>> isinstance(my_list, list)
	True

Test case #3: Check __str__

	>>> my_list = MyList([3, 1, 2])
	>>> my_list.print_sorted()
	[1, 2, 3]
	>>> print(my_list)
	[3, 1, 2]

Test case #4: Check append()

	>>> add(1.1, 2)
	3


print_sorted tests
===================

Test case #0: with sorted append
	>>> my_list = MyList([1, 2, 3])
	>>> my_list.append(4)
	>>> my_list.print_sorted()
	[1, 2, 3, 4]


Test case #1: with not sorted append

	>>> my_list = MyList([5, 2, 3])
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]


Test case #2: with no sorted append with negative number

	>>> my_list = MyList([3, -1, 2])
	>>> my_list.append(-5)
	>>> my_list.append(4)
	>>> my_list.print_sorted()
	[-5, -1, 2, 3, 4]

Test case #3: with empty list
	
	>>> my_list = MyList([])
	>>> my_list.print_sorted()
	[]

Test case #4: returns a new list

	>>> my_list = MyList([3, 1, 2])
	>>> sorted_list = my_list.print_sorted()
	>>> print(sorted_list)
	[1, 2, 3]
